/*
 * This file is part of Greta.
 *
 * Greta is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Greta is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with Greta.  If not, see <https://www.gnu.org/licenses/>.
 *
 */
package greta.core.utilx.gui;

import greta.core.intentions.IntentionEmitter;
import greta.core.intentions.IntentionPerformer;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.io.File;
import java.io.IOException;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;
import javax.swing.JFileChooser;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Andre-Marie Pez
 */
public class OpenAndLoad1 extends javax.swing.JFrame implements IntentionEmitter{

    /** Creates new form OpenAndLoad */
    public OpenAndLoad1() {
        initComponents();
    }
    public void setFileName(String fileName){
        this.fileNameTextFields.setText(fileName);
    }
    
    

    public String getFileName(){
        return this.fileNameTextFields.getText();
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jFileChooser1.setCurrentDirectory(new File("./"));
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jButtonIN = new javax.swing.JButton();
        jButtonA = new javax.swing.JButton();
        jButtonC = new javax.swing.JButton();
        jButtonFN = new javax.swing.JButton();
        jButtonBR = new javax.swing.JButton();
        jButtonBL = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jButtonBack = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        fileNameTextFields = new javax.swing.JTextField();
        jButtonOpen = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        subjectnameTextField = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButtonR = new javax.swing.JButton();
        jButtonStart = new javax.swing.JButton();
        jTime = new javax.swing.JTextField();
        jButtonEX = new javax.swing.JButton();
        jButtonE = new javax.swing.JButton();

        jButtonIN.setText("Introduction");
        jButtonIN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonINActionPerformed(evt);
            }
        });

        jButtonA.setText("A");
        jButtonA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAActionPerformed(evt);
            }
        });

        jButtonC.setText("C");
        jButtonC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCActionPerformed(evt);
            }
        });

        jButtonFN.setText("Conclusion");
        jButtonFN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFNActionPerformed(evt);
            }
        });

        jButtonBR.setText("B_R");
        jButtonBR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBRActionPerformed(evt);
            }
        });

        jButtonBL.setText("B_L");
        jButtonBL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBLActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 79, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButtonA, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                            .addComponent(jButtonC, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE))
                        .addGap(78, 78, 78))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButtonFN, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonIN, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(56, 56, 56))))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jButtonBR, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonBL, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jButtonIN)
                .addGap(39, 39, 39)
                .addComponent(jButtonA)
                .addGap(28, 28, 28)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonBR)
                    .addComponent(jButtonBL))
                .addGap(43, 43, 43)
                .addComponent(jButtonC)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(jButtonFN)
                .addGap(32, 32, 32))
        );

        jButtonBack.setText("Back");
        jButtonBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(54, Short.MAX_VALUE)
                .addComponent(jButtonBack)
                .addGap(50, 50, 50))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonBack)
                .addGap(141, 141, 141))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(37, 37, 37)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        fileNameTextFields.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileNameTextFieldsActionPerformed(evt);
            }
        });

        jButtonOpen.setText("Select Dir...");
        jButtonOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOpenActionPerformed(evt);
            }
        });

        jLabel1.setText("Prénom du participant : ");

        subjectnameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subjectnameTextFieldActionPerformed(evt);
            }
        });

        jButton1.setText("Save");

        jButtonR.setText("Reset");
        jButtonR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRActionPerformed(evt);
            }
        });

        jButtonStart.setText("Start");
        jButtonStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonStartActionPerformed(evt);
            }
        });

        jTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTimeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonOpen)
                    .addComponent(jButtonStart, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTime)
                    .addComponent(fileNameTextFields, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE))
                .addGap(40, 40, 40)
                .addComponent(jButtonR)
                .addGap(26, 26, 26)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(subjectnameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(52, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fileNameTextFields, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonOpen)
                    .addComponent(jLabel1)
                    .addComponent(subjectnameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jButtonR))
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonStart)
                    .addComponent(jTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jButtonEX.setText("Excuse");
        jButtonEX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEXActionPerformed(evt);
            }
        });

        jButtonE.setText("Error");
        jButtonE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonEX, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(81, 81, 81))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(19, 19, 19))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonE)
                        .addGap(35, 35, 35)
                        .addComponent(jButtonEX)
                        .addGap(133, 133, 133))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
     
     int cliqueA=0;
     int cliqueB=0;
     int cliqueC=0;
     int cliqueR=0;
     long starttime = 0;
     CsvWriter Csvfile = new CsvWriter();
     
    private void jButtonINActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonINActionPerformed
        // TODO add your handling code here:
         String Scene = null;
         String Slash = "//" ;
         
      File directoryPath = new File(fileNameTextFields.getText());
      //List of all files and directories
      String contents[] = directoryPath.list();
        for (String content : contents) {
            if (content.contains("Intro")) {
                Scene = content;
            }
        }
        send(fileNameTextFields.getText()+Slash+ Scene );
        jButtonIN.setBackground(Color.red);
        
       //stockae du temps 
        double tps = (double) System.currentTimeMillis()-starttime;
        //stock le string dans le tableau csv en mode
        try {
            Csvfile.sendToCSV(jButtonIN.getText(),Double.toString(tps/1000.0));
        } catch (IOException ex) {
            Logger.getLogger(OpenAndLoad1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonINActionPerformed

    private void jButtonAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAActionPerformed
        // TODO add your handling code here:
      if (cliqueA > 7) {
          cliqueA = 0;
      }
      String Scene = null;
      String Slash = "\\" ;
      File directoryPath = new File(fileNameTextFields.getText());
      //List of all files and directories
      String contents[] = directoryPath.list();
      if (cliqueA == 0) {
          jButtonA.setText("A0");
          for (String content : contents) {
            if (content.contains("A0")) {
                Scene = content;
            }
         }
        }
       if (cliqueA == 1) { 
          jButtonA.setText("A1");
          for (String content : contents) {
            if (content.contains("A1")) {
                Scene = content;
            }
         }
        }
        if (cliqueA == 2) { 
          jButtonA.setText("A2");
          for (String content : contents) {
            if (content.contains("A2")) {
                Scene = content;
            }
         }
        }
         if (cliqueA == 3) { 
          jButtonA.setText("A3");
          for (String content : contents) {
            if (content.contains("A3")) {
                Scene = content;
            }
         }
        }
          if (cliqueA == 4) { 
          jButtonA.setText("A4");
          for (String content : contents) {
            if (content.contains("A4")) {
                Scene = content;
            }
         }
        }
           if (cliqueA == 5) { 
          jButtonA.setText("A5");
          for (String content : contents) {
            if (content.contains("A5")) {
                Scene = content;
            }
         }
        }
            if (cliqueA == 6) { 
          jButtonA.setText("A6");
          for (String content : contents) {
            if (content.contains("A6")) {
                Scene = content;
            }
         }
        }
             if (cliqueA == 7) {
          jButtonA.setText("A7");
          for (String content : contents) {
            if (content.contains("A7")) {
                Scene = content;
            }
         }
        }
      
        send(fileNameTextFields.getText()+Slash+ Scene );
        cliqueA++;  
        
         //stockae du temps 
        double tps = (double) System.currentTimeMillis()-starttime;
        
        try {
            //stock le string dans le tableau csv en mode
            Csvfile.sendToCSV(jButtonA.getText(),Double.toString(tps/1000.0));
        } catch (IOException ex) {
            Logger.getLogger(OpenAndLoad1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonAActionPerformed

    private void jButtonOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOpenActionPerformed
        // TODO add your handling code here:
         jFileChooser1.setLocale(Locale.getDefault());
        //For directoryOnly
        jFileChooser1.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        jFileChooser1.updateUI();
        if(jFileChooser1.showOpenDialog(this) == javax.swing.JFileChooser.APPROVE_OPTION){
            File file = jFileChooser1.getSelectedFile();
            this.fileNameTextFields.setText(file.getAbsolutePath());
        }
    }//GEN-LAST:event_jButtonOpenActionPerformed

    private void fileNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filenameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_filenameTextFieldActionPerformed

    private void subjectnameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subjectnameTextFieldActionPerformed
        // TODO add your handling code here:
        String ID  = subjectnameTextField.getText(); // on récupère le nom tapé du sujet 
        // maintenant on l'envoi au csv :
        //sent_to_csv (ID);
    }//GEN-LAST:event_subjectnameTextFieldActionPerformed

    private void jButtonCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCActionPerformed
        // TODO add your handling code here:
      if (cliqueC > 8) {
          cliqueC = 0;
      }
      String Scene = null;
      String Slash = "\\" ; 
      File directoryPath = new File(fileNameTextFields.getText());
      //List of all files and directories
      String contents[] = directoryPath.list();
      if (cliqueC == 0) { 
          jButtonC.setText("C0");
          for (String content : contents) {
            if (content.contains("C0")) {
                Scene = content;
            }
         }
        }
       if (cliqueC == 1) { 
          jButtonC.setText("C1");
          for (String content : contents) {
            if (content.contains("C1")) {
                Scene = content;
            }
         }
        }
        if (cliqueC == 2) { 
          jButtonC.setText("C2");
          for (String content : contents) {
            if (content.contains("C2")) {
                Scene = content;
            }
         }
        }
         if (cliqueC == 3) { 
          jButtonC.setText("C3");
          for (String content : contents) {
            if (content.contains("C3")) {
                Scene = content;
            }
         }
        }
          if (cliqueC == 4) { 
          jButtonC.setText("C4");
          for (String content : contents) {
            if (content.contains("C4")) {
                Scene = content;
            }
         }
        }
           if (cliqueC == 5) { 
          jButtonC.setText("C5");
          for (String content : contents) {
            if (content.contains("C5")) {
                Scene = content;
            }
         }
        }
            if (cliqueC == 6) { 
            jButtonC.setText("C6");
          for (String content : contents) {
            if (content.contains("C6")) {
                Scene = content;
            }
         }
        }
             if (cliqueC == 7) { 
          jButtonC.setText("C7");
          for (String content : contents) {
            if (content.contains("C7")) {
                Scene = content;
            }
            
         }
        }
                  if (cliqueC == 8) { 
          jButtonC.setText("C8");
          for (String content : contents) {
            if (content.contains("C8")) {
                Scene = content;
            }
            
         }
        }
      
        send(fileNameTextFields.getText()+Slash+ Scene );
        cliqueC++;
        
        //stockae du temps 
        double tps = (double) System.currentTimeMillis()-starttime;
        
        try {
            //stock le string dans le tableau csv en mode
            Csvfile.sendToCSV(jButtonC.getText(),Double.toString(tps/1000.0));
        } catch (IOException ex) {
            Logger.getLogger(OpenAndLoad1.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jButtonCActionPerformed

    private void jButtonBRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBRActionPerformed
        // TODO add your handling code here:
       
      
      if (cliqueB >7){
          cliqueB = 0;
      }
       String Scene = null;
       String Slash = "\\" ; 
      File directoryPath = new File(fileNameTextFields.getText());
      //List of all files and directories
      String contents[] = directoryPath.list();
      if (cliqueB == 0) { 
          jButtonBR.setText("B_R0");
          jButtonBL.setText("B_L0");
          for (String content : contents) {
            if (content.contains("B_R0")) {
                Scene = content;
            }
         }
        }
       if (cliqueB == 1) { 
          jButtonBR.setText("B_R1");
          jButtonBL.setText("B_L1");
          jButtonE.setBackground(Color.red);
          for (String content : contents) {
            if (content.contains("B_R1")) {
                Scene = content;
            }
         }
        }
        if (cliqueB == 2) { 
          jButtonBR.setText("B_R2");
          jButtonBL.setText("B_L2");
          for (String content : contents) {
            if (content.contains("B_R2")) {
                Scene = content;
            }
         }
        }
         if (cliqueB == 3) { 
          jButtonBR.setText("B_R3");
          jButtonBL.setText("B_L3");
          for (String content : contents) {
            if (content.contains("B_R3")) {
                Scene = content;
            }
         }
        }
          if (cliqueB == 4) { 
          jButtonBR.setText("B_R4");
          jButtonBL.setText("B_L4");
          jButtonE.setBackground(Color.green);
          for (String content : contents) {
            if (content.contains("B_R4")) {
                Scene = content;
            }
         }
        }
           if (cliqueB == 5) { 
          jButtonBR.setText("B_R5");
          jButtonBL.setText("B_L5");
          for (String content : contents) {
            if (content.contains("B_R5")) {
                Scene = content;
            }
         }
        }
            if (cliqueB == 6) { 
          jButtonBR.setText("B_R6");
          jButtonBL.setText("B_L6");
          jButtonE.setBackground(Color.blue);
          for (String content : contents) {
            if (content.contains("B_R6")) {
                Scene = content;
            }
         }
        }
             if (cliqueB == 7) { 
          jButtonBR.setText("B_R7");
          jButtonBL.setText("B_L7");
          for (String content : contents) {
            if (content.contains("B_R7")) {
                Scene = content;
            }
         }
        }
      
        send(fileNameTextFields.getText()+Slash+ Scene );
        cliqueB++;
        
        //stockae du temps 
        double tps = (double) System.currentTimeMillis()-starttime;
        try {
            //stock le string dans le tableau csv en mode
            Csvfile.sendToCSV(jButtonBR.getText(),Double.toString(tps/1000.0));
        } catch (IOException ex) {
            Logger.getLogger(OpenAndLoad1.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jButtonBRActionPerformed

    private void jButtonFNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFNActionPerformed
        // TODO add your handling code here:
      
         String Scene = null;
         String Slash= "//" ;
      File directoryPath = new File(fileNameTextFields.getText());
      //List of all files and directories
      String contents[] = directoryPath.list();
        for (String content : contents) {
            if (content.contains("Conclusion")){
                Scene = content;
            }
        }
         send(fileNameTextFields.getText()+Slash+ Scene );
        jButtonIN.setBackground(Color.red);
        
        //stockae du temps
        //stock le string dans le tableau csv en mode
        double tps = (double) System.currentTimeMillis()-starttime;
        
        try {
            Csvfile.sendToCSV(jButtonFN.getText(),Double.toString(tps/1000.0));
        } catch (IOException ex) {
            Logger.getLogger(OpenAndLoad1.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jButtonFNActionPerformed

    private void fileNameTextFieldsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileNameTextFieldsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fileNameTextFieldsActionPerformed

    private void jButtonRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRActionPerformed
        // TODO add your handling code here:    
    cliqueA=0;
    cliqueB=0;
    cliqueC=0;
    cliqueR=0;
    jButtonA.setText("A");
    jButtonBR.setText("B_R");
    jButtonBL.setText("B_L");
    jButtonC.setText("C");
    jButtonE.setText("Error");
    jButtonIN.setBackground(Color.white);
    jButtonFN.setBackground(Color.white);
    jButtonE.setBackground(Color.white);
    starttime = 0;
   
    }//GEN-LAST:event_jButtonRActionPerformed

    private void jButtonBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBackActionPerformed
        // TODO add your handling code here:
        cliqueB= cliqueB - 1;
    }//GEN-LAST:event_jButtonBackActionPerformed

    private void jTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTimeActionPerformed

    private void jButtonStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonStartActionPerformed
        // TODO add your handling code here:
    
    String agent = fileNameTextFields.getText();
    if (agent.contains("Agent1")){
        agent="Agent1";
    }
    
    if (agent.contains("Agent2")){ 
        agent="Agent2"; 
    }
    starttime = System.currentTimeMillis();
    SimpleDateFormat formatter= new SimpleDateFormat("yyyy-MM-dd'at'HH-mm-ss");
    Date date = new Date(System.currentTimeMillis());
    this.jTime.setText(formatter.format(date));
    CsvWriter newCsvfile = new CsvWriter("D:\\Csvfiles",subjectnameTextField.getText()+"-",agent+"-"+jTime.getText());
    Csvfile = newCsvfile;
        try {
            Csvfile.sendToCSV(jButtonStart.getText(),"0");
        } catch (IOException ex) {
            Logger.getLogger(OpenAndLoad1.class.getName()).log(Level.SEVERE, null, ex);
        }
   
        
    }//GEN-LAST:event_jButtonStartActionPerformed

    private void jButtonBLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBLActionPerformed
        // TODO add your handling code here:
         if (cliqueB >7){
          cliqueB = 0;
      }
       String Scene = null;
       String Slash = "\\" ; 
      File directoryPath = new File(fileNameTextFields.getText());
      //List of all files and directories
      String contents[] = directoryPath.list();
      if (cliqueB == 0) { 
           jButtonBL.setText("B_L0");
           jButtonBR.setText("B_R0");
          for (String content : contents) {
            if (content.contains("B_L0")) {
                Scene = content;
            }
         }
        }
       if (cliqueB == 1) { 
           jButtonBL.setText("B_L1");
           jButtonBR.setText("B_R1");
           jButtonE.setBackground(Color.red);
          for (String content : contents) {
            if (content.contains("B_L1")) {
                Scene = content;
            }
         }
        }
        if (cliqueB == 2) { 
           jButtonBR.setText("B_R2");
           jButtonBL.setText("B_L2");
          for (String content : contents) {
            if (content.contains("B_L2")) {
                Scene = content;
            }
         }
        }
         if (cliqueB == 3) { 
           jButtonBR.setText("B_R3");
           jButtonBL.setText("B_L3");
          for (String content : contents) {
            if (content.contains("B_L3")) {
                Scene = content;
            }
         }
        }
          if (cliqueB == 4) { 
          jButtonBR.setText("B_R4");
          jButtonBL.setText("B_L4");
          jButtonE.setBackground(Color.green);
          for (String content : contents) {
            if (content.contains("B_L4")) {
                Scene = content;
            }
         }
        }
           if (cliqueB == 5) { 
          jButtonBR.setText("B_R5");
          jButtonBL.setText("B_L5");
          for (String content : contents) {
            if (content.contains("B_L5")) {
                Scene = content;
            }
         }
        }
            if (cliqueB == 6) { 
          jButtonBR.setText("B_R6");
          jButtonBL.setText("B_L6");
          jButtonE.setBackground(Color.blue);
          for (String content : contents) {
            if (content.contains("B_L6")) {
                Scene = content;
            }
         }
        }
             if (cliqueB == 7) { 
          jButtonBR.setText("B_R7");
          jButtonBL.setText("B_L7");
          for (String content : contents) {
            if (content.contains("B_L7")) {
                Scene = content;
            }
            
         }
        }
      
        send(fileNameTextFields.getText()+Slash+ Scene );
        cliqueB++;
        
        //stockae du temps 
        double tps = (double) System.currentTimeMillis()-starttime;
        try {
            //stock le string dans le tableau csv en mode
            Csvfile.sendToCSV(jButtonBL.getText(),Double.toString(tps/1000.0));
        } catch (IOException ex) {
            Logger.getLogger(OpenAndLoad1.class.getName()).log(Level.SEVERE, null, ex);
        }
                               
    }//GEN-LAST:event_jButtonBLActionPerformed

    private void jButtonEXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEXActionPerformed
        // TODO add your handling code here:
    
    if (cliqueR>2){
        cliqueR=0;
    }
    String Scene = null;
    String Slash= "//" ;
      File directoryPath = new File(fileNameTextFields.getText());
      //List of all files and directories
      String contents[] = directoryPath.list();
        for (String content : contents) {
           if(cliqueR==0){
            if (content.contains("excuse0")){
                Scene = content;
            }
           }
           if(cliqueR==1){
            if (content.contains("excuse1")){
                Scene = content;
            }
           }
           if(cliqueR==2){
            if (content.contains("excuse2")){
                Scene = content;
            }
           }
           
         send(fileNameTextFields.getText()+Slash+ Scene);
        }
    cliqueR++;
    
    double tps = (double) System.currentTimeMillis()-starttime;
        try {
            Csvfile.sendToCSV(jButtonEX.getText(),Double.toString(tps/1000.0));
        } catch (IOException ex) {
            Logger.getLogger(OpenAndLoad1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonEXActionPerformed

    private void jButtonEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEActionPerformed
        // TODO add your handling code here:
    String Scene = null;
    String Slash= "//" ;
      File directoryPath = new File(fileNameTextFields.getText());
      //List of all files and directories
      String contents[] = directoryPath.list();
      
        if(cliqueB==2){
          jButtonE.setText("Error_1");
          for (String content : contents) {
            if (content.contains("Error1")) {
                Scene = content;
            }
         } 
        }
        
        if(cliqueB==5){
            
          jButtonE.setText("Error_2");
          for (String content : contents) {
            if (content.contains("Error2")) {
                Scene = content;
            }
         }  
        }
          
        if(cliqueB==7){
            
          jButtonE.setText("Error_3");
          for (String content : contents) {
            if (content.contains("Error3")) {
                Scene = content;
            }
         } 
        }
      send(fileNameTextFields.getText()+Slash+ Scene);
      double tps = (double) System.currentTimeMillis()-starttime;
        try {
            Csvfile.sendToCSV(jButtonE.getText(),Double.toString(tps/1000.0));
        } catch (IOException ex) {
            Logger.getLogger(OpenAndLoad1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonEActionPerformed
        
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField fileNameTextFields;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonA;
    private javax.swing.JButton jButtonBL;
    private javax.swing.JButton jButtonBR;
    private javax.swing.JButton jButtonBack;
    private javax.swing.JButton jButtonC;
    private javax.swing.JButton jButtonE;
    private javax.swing.JButton jButtonEX;
    private javax.swing.JButton jButtonFN;
    private javax.swing.JButton jButtonIN;
    private javax.swing.JButton jButtonOpen;
    private javax.swing.JButton jButtonR;
    private javax.swing.JButton jButtonStart;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTextField jTime;
    private javax.swing.JTextField subjectnameTextField;
    // End of variables declaration//GEN-END:variables

  
    private Method loadMethod;
    private Object loader;
    

    protected void send(String fileName) {
        if(fileName==null || fileName.isEmpty()) return ;
        if(loadMethod!=null){
            try {
                loadMethod.invoke(loader, fileName);
            }
            catch (InvocationTargetException ex) {
            }
            catch (IllegalAccessException | IllegalArgumentException ex) {
                System.err.println("Can not invoke method load(String) on "+loader.getClass().getCanonicalName());
            }
        }
        else{
            System.out.println("load is null");
        }
    }

    public void setLoader(Object loader){
        this.loader = loader;
        try {
            loadMethod = loader.getClass().getMethod("load", String.class);
        } catch (NoSuchMethodException | SecurityException ex) {
            System.err.println("Can not find method load(String) in "+loader.getClass().getCanonicalName());
        }
        try {
            Method getFileFilterMethod = loader.getClass().getMethod("getFileFilter");
            final java.io.FileFilter ff = (java.io.FileFilter) getFileFilterMethod.invoke(loader);
            jFileChooser1.removeChoosableFileFilter(jFileChooser1.getAcceptAllFileFilter());
            jFileChooser1.setAcceptAllFileFilterUsed(true);
            //jFileChooser1.addChoosableFileFilter(new javax.swing.filechooser.FileFilter(){

              //  @Override
                //public boolean accept(File f) {
                  //  return f.isDirectory() || ff.accept(f);
                //}

                //@Override
                //public String getDescription() {
                  //  return OpenAndLoad.this.loader.getClass().getSimpleName()+" Files";
                //}
            //});

        } catch (IllegalAccessException | IllegalArgumentException | NoSuchMethodException | SecurityException | InvocationTargetException ex) {}
    }

    @Override
    public void addIntentionPerformer(IntentionPerformer ip) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void removeIntentionPerformer(IntentionPerformer ip) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

}
